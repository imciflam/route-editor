{"version":3,"sources":["components/MarkersListItem.jsx","components/MarkersList.jsx","actions/actions.js","actions/types.js","components/MarkersInputForm.jsx","components/Markers.jsx","components/MapContainer.jsx","components/App.jsx","reducers/center.js","reducers/dragged.js","reducers/markers.js","reducers/app.js","index.js"],"names":["MarkersListItem","name","onDragOver","onDragEnd","onDragStart","onMarkerDelete","draggable","onClick","MarkersList","e","id","props","setdragged","dataTransfer","effectAllowed","setData","target","parentNode","setDragImage","dragged","changeOrder","removeMarker","this","markers","map","marker","key","Component","connect","state","dispatch","type","afterId","markerId","index","MarkersInputForm","handleChange","setState","newMarker","value","createMarker","preventDefault","randId","Math","floor","random","center","onSubmit","style","display","flexDirection","onChange","required","position","Markers","width","MapContainer","onMarkerClick","_props","_e","activeMarker","onMarkerDragEnd","coord","latLng","lat","lng","changePosition","deactivateMarker","onCenterChanged","_mapProps","changeCenter","google","zoom","containerStyle","clickableIcons","initialCenter","label","onDragend","_t","_map","onClose","visible","path","lineCoordinates","geodesic","googleWrap","GoogleApiWrapper","apiKey","App","justifyContent","action","markerToRemove","find","newArr","filter","element","markerToMove","afterIndex","indexOf","slice","app","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8f602dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst MarkersListItem = ({ name, onDragOver, onDragEnd, onDragStart, onMarkerDelete }) => (\n    <li onDragOver={onDragOver}>\n        <div\n            draggable\n            onDragStart={onDragStart}\n            onDragEnd={onDragEnd}\n        >\n            {name}\n            <span onClick={onMarkerDelete}> âŒ«</span>\n        </div>\n    </li>\n);\n\nexport default MarkersListItem;\n","import React, { Component } from 'react';\nimport MarkersListItem from './MarkersListItem';\nimport { connect } from 'react-redux';\nimport { removeMarker, setdragged, changeOrder } from '../actions/actions';\n\nclass MarkersList extends Component {\n\n    onDragStart = (e, id) => {\n        this.props.setdragged(id);\n        e.dataTransfer.effectAllowed = \"move\";\n        e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n        e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n    };\n\n    onDragOver = id => {\n        if (id === this.props.dragged) { return; }\n        this.props.changeOrder(id, this.props.dragged);\n    };\n\n    onDragEnd = () => this.props.setdragged(null);\n\n    removeMarker = id => this.props.removeMarker(id);\n\n\n    render() {\n        return (\n            <ul>\n                {(this.props.markers || []).map(marker => (\n                    <MarkersListItem\n                        key={marker.id}\n                        name={marker.name}\n                        onDragOver={() => this.onDragOver(marker.id)}\n                        onDragStart={e => this.onDragStart(e, marker.id)}\n                        onDragEnd={this.onDragEnd}\n                        onMarkerDelete={() => this.removeMarker(marker.id)}\n                    />\n                ))}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dragged: state.dragged\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeMarker: (id) => dispatch(removeMarker(id)),\n    changeOrder: (afterId, markerId) => dispatch(changeOrder(afterId, markerId)),\n    setdragged: (index) => dispatch(setdragged(index)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MarkersList);\n","import {\r\n    ADD_MARKER,\r\n    REMOVE_MARKER,\r\n    CHANGE_ORDER,\r\n    CHANGE_POSITION,\r\n    SET_DRAGGED_ITEM,\r\n    CHANGE_CENTER,\r\n} from '../actions/types';\r\n\r\nexport const createMarker = (id, name, position) => ({\r\n    type: ADD_MARKER,\r\n    id, name, position\r\n});\r\n\r\nexport const removeMarker = (id) => ({\r\n    type: REMOVE_MARKER,\r\n    id\r\n});\r\n\r\nexport const changeOrder = (afterId, markerId) => ({\r\n    type: CHANGE_ORDER,\r\n    afterId, markerId\r\n});\r\n\r\nexport const changePosition = (id, position) => ({\r\n    type: CHANGE_POSITION,\r\n    id, position\r\n});\r\n\r\nexport const setdragged = (dragged) => ({\r\n    type: SET_DRAGGED_ITEM,\r\n    dragged\r\n});\r\n\r\n\r\nexport const changeCenter = (lat, lng) => ({\r\n    type: CHANGE_CENTER,\r\n    lat, lng\r\n});\r\n","export const ADD_MARKER = 'ADD_MARKER';\r\nexport const CHANGE_ORDER = 'CHANGE_ORDER';\r\nexport const REMOVE_MARKER = 'REMOVE_MARKER';\r\nexport const CHANGE_POSITION = 'CHANGE_POSITION';\r\nexport const SET_DRAGGED_ITEM = 'SET_DRAGGED_ITEM';\r\nexport const CHANGE_CENTER = 'CHANGE_CENTER';\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createMarker } from '../actions/actions';\n\nclass MarkersInputForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newMarker: ''\n        };\n    }\n\n    handleChange = e => this.setState({ newMarker: e.target.value });\n\n    createMarker = e => {\n        e.preventDefault();\n        const randId = Math.floor(Math.random() * 1000)\n        this.props.createMarker(randId, this.state.newMarker, this.props.center);\n        this.setState({ newMarker: '' });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.createMarker} style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <input\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.newMarker}\n                    required\n                />\n                <input type=\"submit\" />\n            </form>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    center: state.center\n});\n\nconst mapDispatchToProps = dispatch => ({\n    createMarker: (id, name, position) => dispatch(createMarker(id, name, position))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MarkersInputForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarkersList from './MarkersList';\nimport MarkersInputForm from './MarkersInputForm';\n\nexport class Markers extends Component {\n    render() {\n        return (\n            <div style={{ width: '30%' }}>\n                <MarkersInputForm />\n                <MarkersList markers={this.props.markers} />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    markers: state.markers,\n});\n\nexport default connect(\n    mapStateToProps\n)(Markers);\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline } from 'google-maps-react';\nimport { connect } from 'react-redux';\nimport { changePosition, changeCenter } from '../actions/actions';\n\nexport class MapContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeMarker: null,\n            id: null\n        };\n    }\n\n    onMarkerClick = (_props, marker, _e) => this.setState({ activeMarker: marker });\n\n    onMarkerDragEnd = (coord, id) => {\n        let { latLng } = coord;\n        let lat = latLng.lat();\n        let lng = latLng.lng();\n        this.props.changePosition(id, { lat, lng });\n    }\n\n    deactivateMarker = () => { this.setState({ activeMarker: null }) }\n\n\n    onCenterChanged = (_mapProps, map) => this.props.changeCenter(map.center);\n\n\n    render() {\n        return (\n            <Map\n                google={this.props.google}\n                zoom={10}\n                containerStyle={{ width: '60%' }}\n                clickableIcons={true}\n                initialCenter={this.props.center}\n                onCenterChanged={this.onCenterChanged}\n            >\n                {\n                    (this.props.markers || []).map(marker => (\n                        <Marker\n                            id={marker.id}\n                            label={marker.name}\n                            name={marker.name}\n                            key={marker.id}\n                            onDragend={(_t, _map, coord) => this.onMarkerDragEnd(coord, marker.id)}\n                            draggable={true}\n                            position={marker.position}\n                            onClick={this.onMarkerClick}\n                        />\n                    ))\n                }\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    onClose={this.deactivateMarker}\n                    visible={this.state.activeMarker !== null}>\n                    <span>{this.state.activeMarker ? this.state.activeMarker.name : \"\"}</span>\n                </InfoWindow>\n                <Polyline\n                    path={this.props.lineCoordinates}\n                    geodesic={true}\n                />\n            </Map>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    changePosition: (id, position) => dispatch(changePosition(id, position)),\n    changeCenter: ({ lat, lng }) => dispatch(changeCenter(lat(), lng()))\n});\n\nconst googleWrap = GoogleApiWrapper({\n    apiKey: 'AIzaSyBWohqCXZMM2XZgyuZowi9GXexqwNBIctc'\n})(MapContainer);\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(googleWrap);\n","import React, { Component } from 'react';\r\nimport Markers from './Markers';\r\nimport MapContainer from './MapContainer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <MapContainer\r\n                    markers={this.props.markers}\r\n                    lineCoordinates={this.props.markers.map(marker => marker.position)}\r\n                    center={this.props.initialCenter}\r\n                />\r\n                <Markers markers={this.props.markers} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    markers: state.markers,\r\n    initialCenter: state.initialCenter\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { CHANGE_CENTER } from '../actions/types';\n\nconst center = (state = {\n    lat: 37.775,\n    lng: -122.405\n}, action) => {\n    if (!action) {\n        return state;\n    }\n    switch (action.type) {\n        case CHANGE_CENTER:\n            return {\n                ...state, lat: action.lat, lng: action.lng\n            };\n        default:\n            return state;\n    }\n}\n\nexport default center;\n","import { SET_DRAGGED_ITEM } from '../actions/types';\n\nconst dragged = (state = '', action) => {\n    switch (action.type) {\n        case SET_DRAGGED_ITEM:\n            return action.dragged;\n        default:\n            return state;\n    }\n};\n\nexport default dragged;\n","import { ADD_MARKER, REMOVE_MARKER, CHANGE_ORDER, CHANGE_POSITION } from '../actions/types';\n\nconst markers = (state = [], action) => {\n    switch (action.type) {\n\n        case ADD_MARKER:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    name: action.name,\n                    position: action.position\n                }\n            ];\n\n        case REMOVE_MARKER: {\n            const markerToRemove = state.find(marker => marker.id === action.id)\n            const newArr = state.filter(element => element !== markerToRemove)\n            return newArr;\n        }\n\n        case CHANGE_ORDER: {\n            const markerToMove = state.find(marker => marker.id === action.markerId); // get a marker\n            const afterIndex = state.indexOf(state.find(marker => marker.id === action.afterId));\n            const markers = state.filter(marker => marker.id !== action.markerId);\n            return [\n                ...markers.slice(0, afterIndex),\n                markerToMove,\n                ...markers.slice(afterIndex)\n            ];\n        }\n\n        case CHANGE_POSITION:\n            return state.map((marker) => {\n                if (marker.id === action.id) {\n                    return {\n                        ...marker, position: action.position\n                    };\n                }\n                return marker\n            })\n\n        default:\n            return state;\n    }\n};\n\nexport default markers;\n","import { combineReducers } from 'redux';\nimport center from './center';\nimport dragged from './dragged';\nimport markers from './markers';\n\nconst app = combineReducers({\n    markers,\n    dragged,\n    center\n})\n\nexport default app;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport app from './reducers/app';\n\nconst store = createStore(app);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}